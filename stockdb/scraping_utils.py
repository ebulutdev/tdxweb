import requests
from bs4 import BeautifulSoup
from datetime import datetime
import re

KEYWORDS = {
    "jeopolitik": ["sava≈ü", "√ßatƒ±≈üma", "darbe", "yaptƒ±rƒ±m", "gerilim", "i≈ügal", "f√ºze", "ambargo"],
    "kriz": ["kriz", "√ß√∂k√º≈ü", "iflas", "resesyon", "tarih√Æ d√º≈ü√º≈ü", "panik", "likidite krizi"],
    "merkez_bankasƒ±": ["faiz kararƒ±", "artƒ±rƒ±mƒ±", "indirimi", "TCMB", "Fed", "≈üahin", "g√ºvercin", "PPK"],
    "veri": ["enflasyon", "T√úFE", "i≈üsizlik", "PMI", "beklentinin √ºzerinde", "daralma", "b√ºy√ºme"],
    "afet": ["deprem", "≈üiddetinde", "felaket", "salgƒ±n", "pandemi", "karantina", "can kaybƒ±"]
}

EFFECTS = {
    "jeopolitik": "üìâ Borsalar ‚Üì, üìà Dolar/Altƒ±n ‚Üë",
    "kriz": "üìâ Borsalar ‚Üì, üìà Dolar/Faiz ‚Üë",
    "merkez_bankasƒ±": "Faiz artƒ±≈üƒ±: üìâ BIST, üìà TL ve Faiz; Faiz indirimi: üìà BIST, üìâ TL ve Faiz",
    "veri": "Pozitif: üìà BIST, üìâ USD/TRY; Negatif: üìâ BIST, üìà USD/TRY",
    "afet": "üìâ Borsalar ‚Üì, üìà Dolar/Altƒ±n/Faiz ‚Üë"
}

# Haber √∂ncelik puanlarƒ±
PRIORITY_SCORES = {
    "jeopolitik": 5,  # En y√ºksek √∂ncelik
    "kriz": 5,
    "merkez_bankasƒ±": 4,
    "veri": 3,
    "afet": 4
}

def classify_news(text):
    for category, words in KEYWORDS.items():
        for word in words:
            if re.search(rf"\b{word}\b", text, re.IGNORECASE):
                return category
    return None

def calculate_priority(news_item):
    base_score = PRIORITY_SCORES.get(news_item["category"], 0)
    
    # Ba≈ülƒ±k uzunluƒüuna g√∂re ek puan (daha detaylƒ± haberler genelde daha √∂nemlidir)
    title_length = len(news_item["title"])
    if title_length > 100:
        base_score += 1
    
    # √ñzel kelimelere g√∂re ek puan
    critical_words = ["acil", "√∂nemli", "kritik", "tarihi", "ilk", "son"]
    for word in critical_words:
        if word in news_item["title"].lower():
            base_score += 1
    
    return base_score

def scrape_and_analyze():
    url = "https://www.bloomberght.com/"
    r = requests.get(url)
    soup = BeautifulSoup(r.text, "html.parser")
    news_list = []
    
    for item in soup.select(".widget-news-list__headline a"):
        title = item.get_text(strip=True)
        link = item["href"]
        category = classify_news(title)
        
        if category:
            news_item = {
                "title": title,
                "link": link,
                "category": category,
                "effect": EFFECTS[category],
                "datetime": datetime.now().strftime("%Y-%m-%d %H:%M")
            }
            news_item["priority"] = calculate_priority(news_item)
            news_list.append(news_item)
    
    # √ñncelik puanƒ±na g√∂re sƒ±rala ve en y√ºksek puanlƒ± haberi d√∂nd√ºr
    if news_list:
        news_list.sort(key=lambda x: x["priority"], reverse=True)
        return [news_list[0]]  # Sadece en √∂nemli haberi d√∂nd√ºr
    return []

if __name__ == "__main__":
    analyzer = NewsAnalyzer()
    top_news = analyzer.scrape_and_analyze()
    for news in top_news:
        print(f"Title: {news['title']}")
        print(f"Category: {news['classification']['category']}")
        print(f"Priority Score: {news['priority']:.2f}")
        print(f"Market Effects: {news['effects']['description']}")
        print("---") 